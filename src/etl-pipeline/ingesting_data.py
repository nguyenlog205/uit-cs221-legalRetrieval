from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

import time
import pandas as pd
import os

class dataIngestionTool:
    def __init__(self,
                 web_link = 'https://vbpl.vn/pages/portal.aspx',
                 chromeDriver_path = r'C:\Users\VICTUS\Documents\developer\chromedriver-win64\chromedriver.exe',
                 
    ):
        try: 
            self.webpage_link = web_link

            self.service = Service(chromeDriver_path)
            self.driver = webdriver.Chrome(service=self.driver)
            print("üü¢ T·∫°o driver th√†nh c√¥ng.")
        except Exception as e:
            print(f"‚≠ï L·ªói khi t·∫°o driver: {e}")

    def ingest_data(self, keyword: str):
        """
        Ph∆∞∆°ng th·ª©c t·∫£i v·ªÅ to√†n b·ªô vƒÉn b·∫£n ph√°p lu·∫≠t v√† metadata li√™n quan t·ªõi keyword ƒë∆∞·ª£c truy·ªÅn v√†o.
        
        # Arg:
        - `keyword`: Keyword truy·ªÅn v√†o.

        # Output:
        - M·ªôt bi·∫øn json duy nh·∫•t l∆∞u tr·ªØ vƒÉn b·∫£n ph√°p lu·∫≠t v√† metadata t∆∞∆°ng ·ª©ng.
        """

        self.driver.get(self.webpage_link)
        keyword = keyword.strip()

        metadata = []
        metadata.clear() # ƒê·∫£m b·∫£o metadata lu√¥n r·ªóng khi b·∫Øt ƒë·∫ßu ingest d·ªØ li·ªáu.

        print(f'üî¨ B·∫Øt ƒë·∫ßu t√¨m ki·∫øm: {keyword} ...')
        search_box = self.driver.find_element(By.ID, "AdvanceKeyword")
        search_box.clear()
        search_box.send_keys(keyword)
        search_box.send_keys(Keys.ENTER)

        time.sleep(0.5)
        try:
            numberOfResult_object = self.driver.find_element(By.XPATH, '//span[contains(text(), "T√¨m th·∫•y")]/strong')
            numberOfResult = int(numberOfResult.text)
            print(f"üî¨ ƒê√£ t√¨m th·∫•y {numberOfResult} vƒÉn b·∫£n ph√°p lu·∫≠t theo t·ª´ kh√≥a {keyword}.")
        except Exception as e:
            print(f"‚≠ï L·ªói khi t√¨m t√†i li·ªáu vƒÉn b·∫£n ph√°p lu·∫≠t theo t·ª´ kh√≥a {keyword}: {e}")
            return []
        
        iteractor = 0
        
        while True:
            ul_element_object = self.driver.find_element(By.CLASS_NAME, "listLaw")
            li_elements = ul_element_object.find_elements(By.TAG_NAME, "li")

            '''
            
            '''
            print()



